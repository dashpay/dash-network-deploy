---

- name: Create dashd group
  ansible.builtin.group:
    name: '{{ dashd_group }}'

- name: Create dashd user
  ansible.builtin.user:
    name: '{{ dashd_user }}'
    comment: 'Dash user'
    group: '{{ dashd_group }}'
    home: '{{ dashd_home }}'
    create_home: true
    umask: '0002'
  register: dash_user

- name: Create .dashcore directory for dash
  ansible.builtin.file:
    path: '{{ dashd_home }}/.dashcore'
    state: directory
    mode: "0755"
    owner: '{{ dashd_user }}'
    group: '{{ dashd_group }}'

- name: Write dash.conf file in /etc/
  ansible.builtin.template:
    src: dash.conf.j2
    dest: /etc/dash.conf
    owner: root
    group: root
    mode: "0644"

- name: Configure users for dash-cli
  ansible.builtin.include_role:
    name: dash_cli
    tasks_from: configure_users
  vars:
    dashd_user_dict:
      user: '{{ dashd_user }}'
      group: '{{ dashd_group }}'
      dir: '{{ dashd_home }}'
    users: '{{ system_users + [dashd_user_dict] }}'

- name: Create dashcore docker-compose dir
  ansible.builtin.file:
    path: '{{ dashd_compose_path }}'
    state: directory
    mode: "0755"
    recurse: true

- name: Copy dashcore docker-compose file
  ansible.builtin.template:
    src: '{{ item }}.j2'
    dest: '{{ dashd_compose_path }}/{{ item }}'
    mode: "0644"
  loop:
    - docker-compose.yml
    - .env

- name: Configure log rotation
  ansible.builtin.include_role:
    name: arillso.logrotate
  vars:
    logrotate_use_hourly_rotation: true
    logrotate_options:
      - weekly
      - rotate 4
      - create
      - dateext
      - dateformat -%Y%m%d-%s
      - su root syslog
    logrotate_applications:
      - name: core-logs
        definitions:
          - logs:
              - "{{ dashd_home }}/.dashcore/{{ dash_network_name if dash_network == 'devnet' else 'testnet3' }}/debug.log"
            options:
              - rotate 7
              - daily
              - maxsize 1G
              - missingok
              - notifempty
              - copytruncate
              - compress
              - delaycompress

- name: Set mode to logrotate cron file
  ansible.builtin.file:
    path: /etc/cron.daily/logrotate
    mode: "+x"

- name: Check if wallet exists
  ansible.builtin.stat:
    path: "{{ dashd_home }}/.dashcore/{{ dash_network_name if dash_network == 'devnet' else 'testnet3' }}/wallets/{{ wallet_rpc_wallet_faucet }}/wallet.dat"
  register: wallet_exists

- name: Load wallets on startup
  ansible.builtin.blockinfile:
    path: '/etc/dash.conf'
    insertafter: '[{{ dash_network }}]'
    block: |
      wallet={{ wallet_rpc_wallet_faucet }}
      wallet={{ wallet_rpc_wallet_mno }}
  when: enable_wallet is true and wallet_exists.stat.exists is true

# TODO: why does this always take exactly 30 seconds on first deploy?
- name: Start dash core
  community.docker.docker_compose:
    project_src: '{{ dashd_compose_path }}'
    state: present
    restarted: true
    pull: true
    timeout: 30


- name: Determine node-specific start day
  set_fact:
    node_start_day: "{{ (play_hosts.index(inventory_hostname) % nightly_masternodes) + 1 }}"
  when: 'inventory_hostname in groups[nightly_masternodes]'

- name: Schedule restart for hosts running nightly core
  ansible.builtin.cron:
    name: "Update nightly core container"
    day: "{{ node_start_day }}/{{ groups['nightly_masternodes'] | length }}"
    job: "cd {{ dashd_compose_path }} && docker-compose pull && docker compose up -d"
  when: 'inventory_hostname in groups[nightly_masternodes]'

- name: Wait for rpc to be available
  ansible.builtin.command: dash-cli getgovernanceinfo
  register: task_result
  until: task_result.rc == 0
  retries: 50
  delay: 2
  changed_when: task_result.rc == 0

# Wallet node
- name: Create faucet wallet
  ansible.builtin.command:
    cmd: dash-cli createwallet {{ wallet_rpc_wallet_faucet }}
    creates: "{{ dashd_home }}/.dashcore/{{ dash_network_name if dash_network == 'devnet' else 'testnet3' }}/wallets/{{ wallet_rpc_wallet_faucet }}/wallet.dat"
  register: create_faucet_wallet_result
  when: enable_wallet is true

- name: Create mno wallet
  ansible.builtin.command:
    cmd: dash-cli createwallet {{ wallet_rpc_wallet_mno }}
    creates: "{{ dashd_home }}/.dashcore/{{ dash_network_name if dash_network == 'devnet' else 'testnet3' }}/wallets/{{ wallet_rpc_wallet_mno }}/wallet.dat"
  register: create_mno_wallet_result
  when: enable_wallet is true

- name: Load wallets on startup
  ansible.builtin.blockinfile:
    path: '/etc/dash.conf'
    insertafter: '[{{ dash_network }}]'
    block: |
      wallet={{ wallet_rpc_wallet_faucet }}
      wallet={{ wallet_rpc_wallet_mno }}
  when: create_faucet_wallet_result.changed and create_mno_wallet_result.changed

- name: Import faucet privkey
  ansible.builtin.command: dash-cli -rpcwallet={{ wallet_rpc_wallet_faucet }} importprivkey {{ faucet_privkey }}
  register: result
  when: enable_wallet is true
  changed_when: result.rc == 0
